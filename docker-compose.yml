version: "3.1"

services:
  db:
    container_name: AyZiWai-DB
    image: "mongo:4.2"  # Specify a stable version to avoid delays
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "admin"
      MONGO_INITDB_ROOT_PASSWORD: "admin"
      MONGO_INITDB_DATABASE: "AyZiWai"
    volumes:
      - db:/data/db
    networks:
      - network-data

  spring-app:
    container_name: AyZiWai
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATA_MONGODB_URI=mongodb://admin:admin@db:27017/AyZiWai?authSource=admin
    networks:
      - network-data
    depends_on:
      - db

  test-runner:
    container_name: AyZiWai-Test
    image: maven:3-eclipse-temurin-21-alpine
    working_dir: /app
    volumes:
      - .:/app
    command: [ "mvn", "test" ]
    depends_on:
      - spring-app
    networks:
      - network-data

  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube
    ports:
      - "9001:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - network-data

  jenkins-docker:
    image: jenkins/jenkins:lts
    container_name: jenkins-docker
    restart: unless-stopped
    privileged: true
    user: root
    ports:
      - "9091:8080"
      - "50001:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - GITHUB_REPO=https://github.com/yourusername/AyZiWai.git
    networks:
      - network-data

networks:
  network-data:
    driver: bridge

volumes:
  db:
    driver: local
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  jenkins_home:
